<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>executarFlowDWScheduledProcessGetAc</name>
        <label>executarFlowDWScheduledProcessGetAc</label>
        <locationX>723</locationX>
        <locationY>2599</locationY>
        <actionName>DWFlowExecuteImport</actionName>
        <actionType>apex</actionType>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>execute</name>
            <value>
                <stringValue>DWScheduledProcessGetAc</stringValue>
            </value>
        </inputParameters>
        <nameSegment>DWFlowExecuteImport</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>51.0</apiVersion>
    <choices>
        <name>BuscarContasERP</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Buscar contas do ERP&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>DW_GetAccountsFromERPQueueable</stringValue>
        </value>
    </choices>
    <choices>
        <name>BuscarPedidosERP</name>
        <choiceText>Buscar pedidos do ERP</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>DW_GetOrdersFromERPQueueable</stringValue>
        </value>
    </choices>
    <choices>
        <name>BuscarProdutosDoERP</name>
        <choiceText>&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Buscar produtos do ERP&lt;/span&gt;</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>DW_GetProductsFromERPQueueable</stringValue>
        </value>
    </choices>
    <choices>
        <name>Escolha_a_op_o_desejada</name>
        <choiceText>Escolha a opção desejada</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Escolha a opção desejada</stringValue>
        </value>
    </choices>
    <choices>
        <name>N_o</name>
        <choiceText>Não</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Não</stringValue>
        </value>
    </choices>
    <choices>
        <name>Sim</name>
        <choiceText>Entendido</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Sim</stringValue>
        </value>
    </choices>
    <choices>
        <name>SimAgendar</name>
        <choiceText>Sim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>ScheduledProcessGetAc</stringValue>
        </value>
    </choices>
    <choices>
        <name>SimAgendarPEdido</name>
        <choiceText>Sim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>ScheduledProcessGetOrder</stringValue>
        </value>
    </choices>
    <choices>
        <name>SimAgendarProdutos</name>
        <choiceText>Sim</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>ScheduledProcessGetProduct</stringValue>
        </value>
    </choices>
    <decisions>
        <name>attrNaoRodarGets</name>
        <label>attrNaoRodarGets</label>
        <locationX>1012</locationX>
        <locationY>2417</locationY>
        <defaultConnectorLabel>Resultado padrão</defaultConnectorLabel>
        <rules>
            <name>attriEntendido</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>IntegracaoRodandoBuscarPedidoLista</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Sim</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IntegracaoRodandoBuscarContaLista</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Sim</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IntegracaoRodandoBuscarProdutoLista</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>Sim</elementReference>
                </rightValue>
            </conditions>
            <label>attriEntendido</label>
        </rules>
        <rules>
            <name>agendarPedido</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Deseja_agendar_a_busca_de_pedido_do_ERP_de_hora_em_hora</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>SimAgendarPEdido</elementReference>
                </rightValue>
            </conditions>
            <label>agendarPedido</label>
        </rules>
        <rules>
            <name>agendarConta</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Deseja_agendar_a_busca_de_contas_do_ERP_de_hora_em_hora</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>SimAgendar</elementReference>
                </rightValue>
            </conditions>
            <label>agendarConta</label>
        </rules>
        <rules>
            <name>agendarProduto</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DesejaAgendarBuscaProdutoERPHoraEmHora</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>SimAgendarProdutos</elementReference>
                </rightValue>
            </conditions>
            <label>agendarProduto</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>DW FL Forçar Importação Integração {!$Flow.CurrentDateTime}</interviewLabel>
    <label>DW FL Forçar Importação Integração</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>ApexClassGetAccount</name>
        <label>ApexClassGetAccount</label>
        <locationX>849</locationX>
        <locationY>836</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AsyncApexJobGetJobGetAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>DW_GetAccountsFromERPQueueable</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ApexClass</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>ApexClassGetOrders</name>
        <label>ApexClassGetOrders</label>
        <locationX>848</locationX>
        <locationY>536</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AsyncApexJobGetJobGetOrders</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>DW_GetOrdersFromERPQueueable</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ApexClass</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>ApexClassGetProducts</name>
        <label>ApexClassGetProducts</label>
        <locationX>850</locationX>
        <locationY>223</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AsyncApexJobGetJobGetProducts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>DW_GetProductsFromERPQueueable</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ApexClass</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>AsyncApexJobGetJobGetAccount</name>
        <label>AsyncApexJobGetJobGetAccount</label>
        <locationX>852</locationX>
        <locationY>979</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obter_CronJobDetail_Get_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ApexClassId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ApexClassGetAccount.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Processing</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AsyncApexJob</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>AsyncApexJobGetJobGetOrders</name>
        <label>AsyncApexJobGetJobGetOrders</label>
        <locationX>846</locationX>
        <locationY>678</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ApexClassGetAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ApexClassId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ApexClassGetOrders.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Processing</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AsyncApexJob</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>AsyncApexJobGetJobGetProducts</name>
        <label>AsyncApexJobGetJobGetProducts</label>
        <locationX>850</locationX>
        <locationY>395</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ApexClassGetOrders</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ApexClassId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>ApexClassGetProducts.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Processing</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AsyncApexJob</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Obter_CronJobDetail_Get_Account</name>
        <label>Obter CronJobDetail Get Account</label>
        <locationX>845</locationX>
        <locationY>1133</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obter_CronTrigger_Get_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ScheduledProcessGetAc</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CronJobDetail</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Obter_CronJobDetail_Get_Order</name>
        <label>Obter CronJobDetail Get Order</label>
        <locationX>857</locationX>
        <locationY>1407</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obter_CronTrigger_Get_Order</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ScheduledProcessGetOrder</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CronJobDetail</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Obter_CronJobDetail_Get_Product</name>
        <label>Obter CronJobDetail Get Product</label>
        <locationX>854</locationX>
        <locationY>1657</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obter_CronTrigger_Get_Product</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ScheduledProcessGetProduct</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CronJobDetail</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Obter_CronTrigger_Get_Account</name>
        <label>Obter CronTrigger Get Account</label>
        <locationX>855</locationX>
        <locationY>1280</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obter_CronJobDetail_Get_Order</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CronJobDetailId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Obter_CronJobDetail_Get_Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CronTrigger</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Obter_CronTrigger_Get_Order</name>
        <label>Obter CronTrigger Get Order</label>
        <locationX>855</locationX>
        <locationY>1538</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Obter_CronJobDetail_Get_Product</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CronJobDetailId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Obter_CronJobDetail_Get_Order.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CronTrigger</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Obter_CronTrigger_Get_Product</name>
        <label>Obter CronTrigger Get Product</label>
        <locationX>856</locationX>
        <locationY>1798</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>obterLastHttpRequestGetContas</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CronJobDetailId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Obter_CronJobDetailProduct</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CronTrigger</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>obterLastHttpRequestGetContas</name>
        <label>obterLastHttpRequestGetContas</label>
        <locationX>851</locationX>
        <locationY>1917</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>obterLastHttpRequestGetPedido</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <stringValue>busca clientes</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>HttpRequestLog__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>obterLastHttpRequestGetPedido</name>
        <label>obterLastHttpRequestGetPedido</label>
        <locationX>854</locationX>
        <locationY>2050</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>obterLastHttpRequestGetProdutos</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <stringValue>busca pedidos</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>HttpRequestLog__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>obterLastHttpRequestGetProdutos</name>
        <label>obterLastHttpRequestGetProdutos</label>
        <locationX>851</locationX>
        <locationY>2190</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>BuscaImportacao</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <stringValue>busca produtos</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>HttpRequestLog__c</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>BuscaImportacao</name>
        <label>Busca Importação</label>
        <locationX>659</locationX>
        <locationY>2265</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>executarFlowDWScheduledProcessGetAc</targetReference>
        </connector>
        <fields>
            <name>EscolhaClasseDesejar</name>
            <choiceReferences>BuscarContasERP</choiceReferences>
            <choiceReferences>BuscarPedidosERP</choiceReferences>
            <choiceReferences>BuscarProdutosDoERP</choiceReferences>
            <choiceReferences>Escolha_a_op_o_desejada</choiceReferences>
            <dataType>String</dataType>
            <defaultSelectedChoiceReference>Escolha_a_op_o_desejada</defaultSelectedChoiceReference>
            <fieldText>Escolha a importação que desejar executar?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Integracao_Buscar_Contas</name>
            <fieldText>Integração Buscar Contas</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Integracao_Buscar_Contas_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>AgendamentosConta</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: var(--slds-g-color-neutral-base-100, var(--lwc-colorBackgroundInput,rgb(255, 255, 255))); color: var(--slds-g-color-neutral-base-30, var(--lwc-colorTextWeak,rgb(68, 68, 68))); font-size: var(--lwc-fontSize3,0.8125rem); font-family: var(--lwc-fontFamily,-apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;);&quot;&gt;Já existem rotinas de agendamentos para buscar a conta do ERP:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Proxima execução:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;{!Obter_CronTrigger_Get_Account.NextFireTime}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Obter_CronTrigger_Get_Account.Id</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>Deseja_agendar_a_busca_de_contas_do_ERP_de_hora_em_hora</name>
                    <choiceReferences>SimAgendar</choiceReferences>
                    <choiceReferences>N_o</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Deseja agendar a busca de contas do ERP de hora em hora?</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Obter_CronTrigger_Get_Account.Id</leftValueReference>
                            <operator>EqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>IntegracaoRodandoBuscarContaLista</name>
                    <choiceReferences>Sim</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>A integração para buscar contas já está em andamento, aguarde o processo finalizar.</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>AsyncApexJobGetJobGetAccount.Id</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>DadosUltimoLogConsultaBuscarContas</name>
                    <dataType>DateTime</dataType>
                    <defaultValue>
                        <elementReference>obterLastHttpRequestGetContas.CreatedDate</elementReference>
                    </defaultValue>
                    <fieldText>Data do último log da consulta</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>obterLastHttpRequestGetContas.Id</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>EscolhaClasseDesejar</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>BuscarContasERP</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>EscolhaClasseDesejar</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <elementReference>Escolha_a_op_o_desejada</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Integracao_Buscar_Pedidos</name>
            <fieldText>Integração Buscar Pedidos</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>Integracao_Buscar_Pedidos_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>AgendamentosPedido</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;font-family: var(--lwc-fontFamily,-apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;); font-size: var(--lwc-fontSize3,0.8125rem); color: var(--slds-g-color-neutral-base-30, var(--lwc-colorTextWeak,rgb(68, 68, 68))); background-color: var(--slds-g-color-neutral-base-100, var(--lwc-colorBackgroundInput,rgb(255, 255, 255)));&quot;&gt;Já existem rotinas de agendamentos para buscar a pedido do ERP:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Proxima execução:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;{!Obter_CronTrigger_Get_Order.NextFireTime}&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Obter_CronTrigger_Get_Order.Id</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>Deseja_agendar_a_busca_de_pedido_do_ERP_de_hora_em_hora</name>
                    <choiceReferences>SimAgendarPEdido</choiceReferences>
                    <choiceReferences>N_o</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Deseja agendar a busca de pedido do ERP de hora em hora?</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Obter_CronTrigger_Get_Order.Id</leftValueReference>
                            <operator>EqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>IntegracaoRodandoBuscarPedidoLista</name>
                    <choiceReferences>Sim</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>A integração para buscar pedidos já está em andamento, aguarde o processo finalizar.</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>AsyncApexJobGetJobGetOrders.Id</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>DadosUltimoLogConsultaBuscarPedidos</name>
                    <dataType>DateTime</dataType>
                    <defaultValue>
                        <elementReference>obterLastHttpRequestGetPedido.CreatedDate</elementReference>
                    </defaultValue>
                    <fieldText>Data do último log da consulta</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>obterLastHttpRequestGetPedido.Id</leftValueReference>
                            <operator>NotEqualTo</operator>
                        </conditions>
                    </visibilityRule>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>EscolhaClasseDesejar</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>BuscarPedidosERP</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>EscolhaClasseDesejar</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <elementReference>Escolha_a_op_o_desejada</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>IntegracaoBuscarProdutos</name>
            <fieldText>Integração Buscar Produtos</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>IntegracaoBuscarProdutos_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>AgendamentosProdutos</name>
                    <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: var(--slds-g-color-neutral-base-100, var(--lwc-colorBackgroundInput,rgb(255, 255, 255))); color: var(--slds-g-color-neutral-base-30, var(--lwc-colorTextWeak,rgb(68, 68, 68))); font-size: var(--lwc-fontSize3,0.8125rem); font-family: var(--lwc-fontFamily,-apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Roboto, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;);&quot;&gt;Já existem rotinas de agendamentos para buscar a produto do ERP:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Proxima execução:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;{!Obter_CronTrigger_Get_Product.NextFireTime}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Obter_CronTrigger_Get_Product.Id</leftValueReference>
                            <operator>IsNull</operator>
                            <rightValue>
                                <booleanValue>false</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>DesejaAgendarBuscaProdutoERPHoraEmHora</name>
                    <choiceReferences>SimAgendarProdutos</choiceReferences>
                    <choiceReferences>N_o</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>Deseja agendar a busca de produto do ERP de hora em hora?</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>false</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>Obter_CronTrigger_Get_Product.Id</leftValueReference>
                            <operator>IsNull</operator>
                            <rightValue>
                                <booleanValue>false</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>IntegracaoRodandoBuscarProdutoLista</name>
                    <choiceReferences>Sim</choiceReferences>
                    <dataType>String</dataType>
                    <fieldText>A integração para buscar produtos já está em andamento, aguarde o processo finalizar.</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <isRequired>true</isRequired>
                    <visibilityRule>
                        <conditionLogic>and</conditionLogic>
                        <conditions>
                            <leftValueReference>AsyncApexJobGetJobGetProducts.Id</leftValueReference>
                            <operator>IsNull</operator>
                            <rightValue>
                                <booleanValue>false</booleanValue>
                            </rightValue>
                        </conditions>
                    </visibilityRule>
                </fields>
                <fields>
                    <name>DataDoUltimoLogConsultaProduto</name>
                    <dataType>DateTime</dataType>
                    <defaultValue>
                        <elementReference>obterLastHttpRequestGetProdutos.CreatedDate</elementReference>
                    </defaultValue>
                    <fieldText>Data do último log da consulta</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>false</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>EscolhaClasseDesejar</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <elementReference>BuscarProdutosDoERP</elementReference>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>EscolhaClasseDesejar</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <elementReference>Escolha_a_op_o_desejada</elementReference>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>notificacao</name>
            <fieldText>&lt;p&gt;Se as opções acima estiver selecionado como &lt;strong&gt;NÃO,&lt;/strong&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt; a classe de integração ira rodar para a opção escolhida mas não será agendada.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>721</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>ApexClassGetProducts</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>Obter_CronJobDetailProduct</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Obter_CronJobDetail_Get_Product.Id</elementReference>
        </value>
    </variables>
</Flow>
