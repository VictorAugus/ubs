/**
 * Created by guilhermereis on 05/01/21.
 */

public with sharing class DW_FieldCollector {
    public static List<String> collect(String sobj){
        List<String> fieldList = new List<String>();
        Map<String, Schema.SObjectField> fieldMap = Schema.getGlobalDescribe().get(sobj).getDescribe().fields.getMap();
        for(Schema.SObjectField sObjectField : fieldMap.values()){
            Set<String> userFieldToAvoid = new Set<String>{'UserPreferencesNativeEmailClient', 'UserPreferencesHideLightningMigrationModal', 'UserPreferencesHideSfxWelcomeMat', 'UserPreferencesHideBiggerPhotoCallout', 'UserPreferencesGlobalNavBarWTShown', 'UserPreferencesGlobalNavGridMenuWTShown', 'UserPreferencesCreateLEXAppsWTShown', 'UserPreferencesFavoritesWTShown', 'UserPreferencesRecordHomeSectionCollapseWTShown', 'UserPreferencesRecordHomeReservedWTShown', 'UserPreferencesFavoritesShowTopFavorites', 'UserPreferencesExcludeMailAppAttachments', 'UserPreferencesSuppressTaskSFXReminders', 'UserPreferencesSuppressEventSFXReminders', 'UserPreferencesPreviewCustomTheme', 'UserPreferencesHasCelebrationBadge', 'UserPreferencesUserDebugModePref', 'UserPreferencesSRHOverrideActivities', 'UserPreferencesNewLightningReportRunPageEnabled', 'PortalRole', 'IsPortalEnabled', 'IsExtIndicatorVisible', 'OutOfOfficeMessage', 'MediumPhotoUrl', 'LastViewedDate', 'LastReferencedDate', 'BannerPhotoUrl', 'SmallBannerPhotoUrl', 'MediumBannerPhotoUrl', 'IsProfilePhotoActive', 'IndividualId', 'UserPreferencesHideEndUserOnboardingAssistantModal', 'UserPreferencesPreviewLightning', 'UserPreferencesLightningExperiencePreferred', 'UserPreferencesShowStreetAddressToGuestUsers', 'UserPreferencesShowFaxToGuestUsers', 'UserPreferencesShowMobilePhoneToGuestUsers', 'UserPreferencesShowWorkPhoneToGuestUsers', 'UserPreferencesShowManagerToGuestUsers', 'UserPreferencesShowManagerToGuestUsers', 'UserPreferencesShowEmailToGuestUsers', 'UserPreferencesCacheDiagnostics', 'UserPreferencesPathAssistantCollapsed', 'UserPreferencesDisableEndorsementEmail', 'UserPreferencesSortFeedByComment', 'UserPreferencesReceiveNotificationsAsDelegatedApprover', 'UserPreferencesReceiveNoNotificationsAsApprover', 'UserPermissionsAvantgoUser', 'CurrencyIsoCode','UserType', 'NumberOfFailedLogins', 'DefaultCurrencyIsoCode', 'BadgeText', 'EmailPreferencesAutoBcc', 'Address', 'Street', 'City', 'State', 'Country', 'DeveloperName','PostalCode', 'GeocodeAccuracy', 'RelatedId', 'OwnerId', 'DoesSendEmailToMembers', 'DoesIncludeBosses', 'CreatedDate','CreatedById', 'LastModifiedDate', 'LastModifiedById', 'SystemModstamp', 'CompanyName','Division', 'Department', 'Longitude', 'Latitude', 'StayInTouchNote','StayInTouchSignature', 'StayInTouchSubject', 'Signature', 'SenderName', 'SenderEmail','EmailPreferencesStayInTouchReminder', 'EmailPreferencesAutoBccStayInTouch', 'Fax', 'MobilePhone', 'CommunityNickname','Active', 'TimeZoneSidKey', 'LocaleSidKey', 'ReceivesInfoEmails', 'EmailEncodingKey','ReceivesAdminInfoEmails', 'OfflineTrialExpirationDate', 'LastPasswordChangeDate', 'LastLoginDate', 'ManagerId','DelegatedApproverId', 'EmployeeNumber', 'LanguageLocaleKey', 'Owne', 'DefaultGroupNotificationFrequency','DigestFrequency', 'SmallPhotoUrl', 'FullPhotoUrl', 'AboutMe', 'FederationIdentifier','Extension', 'CallCenterId', 'AccountId', 'ContactId', 'UserPreferencesHideS1BrowserUI','UserPreferencesShowCountryToGuestUsers', 'UserPreferencesShowPostalCodeToGuestUsers', 'UserPreferencesShowStateToGuestUsers', 'UserPreferencesShowCityToGuestUsers', 'UserPreferencesShowTitleToGuestUsers','UserPreferencesShowProfilePicToGuestUsers', 'UserPreferencesShowCountryToExternalUsers', 'UserPreferencesShowPostalCodeToExternalUsers', 'UserPreferencesShowStateToExternalUsers', 'UserPreferencesShowCityToExternalUsers','UserPreferencesShowStreetAddressToExternalUsers', 'UserPreferencesShowFaxToExternalUsers', 'UserPreferencesShowMobilePhoneToExternalUsers', 'UserPreferencesShowWorkPhoneToExternalUsers', 'UserPreferencesShowEmailToExternalUsers','UserPreferencesShowManagerToExternalUsers', 'UserPreferencesShowTitleToExternalUsers', 'UserPreferencesDisableFileShareNotificationsForApi', 'UserPreferencesEnableAutoSubForFeeds', 'UserPreferencesDisableSharePostEmail','UserPreferencesDisableBookmarkEmail', 'UserPreferencesOptOutOfTouch', 'UserPreferencesDisableMessageEmail', 'UserPreferencesDisableLikeEmail', 'UserPreferencesDisCommentAfterLikeEmail','UserPreferencesHideSecondChatterOnboardingSplash', 'UserPreferencesHideChatterOnboardingSplash', 'UserPreferencesHideCSNDesktopTask', 'UserPreferencesDisMentionsCommentEmail', 'UserPreferencesDisableMentionsPostEmail','UserPreferencesHideCSNGetChatterMobileTask', 'UserPreferencesApexPagesDeveloperMode', 'UserPreferencesContentEmailAsAndWhen', 'UserPreferencesContentNoEmail', 'UserPreferencesDisProfPostCommentEmail','UserPreferencesDisableLaterCommentEmail', 'UserPreferencesDisableChangeCommentEmail', 'UserPreferencesDisableProfilePostEmail', 'UserPreferencesDisableFollowersEmail', 'UserPreferencesDisableAllFeedsEmail','UserPreferencesReminderSoundOff', 'UserPreferencesTaskRemindersCheckboxDefault', 'UserPreferencesEventRemindersCheckboxDefault', 'UserPreferencesActivityRemindersPopup', 'ForecastEnabled','UserPermissionsChatterAnswersUser', 'UserPermissionsSiteforcePublisherUser', 'UserPermissionsSiteforceContributorUser', 'UserPermissionsSupportUser', 'UserPermissionsInteractionUser','UserPermissionsKnowledgeUser', 'UserPermissionsSFContentUser', 'UserPermissionsMobileUser', 'UserPermissionsCallCenterAutoLogin', 'UserPermissionsOfflineUser','UserPermissionsMarketingUser', 'OfflinePdaTrialExpirationDate'};
            if (sobj == 'User') {
                if (!userFieldToAvoid.contains(sObjectField.getDescribe().getName()) && !sObjectField.getDescribe().getName().contains('__c') ) {
                    fieldList.add(sObjectField.getDescribe().getName());
                }
            }else if (sobj == 'Account') {
                if (!sObjectField.getDescribe().getName().contains('__pc') ) {
                    fieldList.add(sObjectField.getDescribe().getName());
                }
            }else{
                fieldList.add(sObjectField.getDescribe().getName());
            }
        }
        return fieldList;

    }
    public static String collectStr(String sobj){
        return String.join(collect(sobj), ',');
    }
}